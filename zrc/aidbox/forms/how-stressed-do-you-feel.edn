{ns aidbox.forms.how-stressed-do-you-feel,
 import #{aidbox.sdc zenbox aidbox.sdc.fhir},

 HowStressedDoYouFeelDocument
 {:zen/tags #{zen/schema aidbox.sdc/doc aidbox.sdc/rules},
  :zen/desc "How stressed to you feel?",
  :type zen/map,
  :confirms #{aidbox.sdc/Document},
  :keys {:how-stressed {:text "Choose an answer that's closest to how you've been feeling within last half an hour?"
                        :confirms #{aidbox.sdc.fhir/coding}
                        :code [{:code "how-stressed"}]
                        :enum [{:value {:code "1" :display "Not at all"}}
                               {:value {:code "2" :display "Almost not stressed at all"}}
                               {:value {:code "3" :display "Somewhat stressed"}}
                               {:value {:code "4" :display "More stressed than not stressed"}}
                               {:value {:code "5" :display "Feel stressed most of the time"}}]}}},


 HowStressedDoYouFeelLaunch
 {:zen/tags #{aidbox.sdc/Launch},
  :document HowStressedDoYouFeelDocument,
  :params {:encounter-id {:type zen/string}},
  :populate-engine aidbox.sdc/LispPopulate,
  :populate {:author (get-in [:ctx :user]),
             :encounter {:id (get-in [:params :encounter-id]), :resourceType "Encounter"},
             :patient (sql
                       {:select [:#> :resource [:subject]],
                        :from :Encounter,
                        :where [:= :id (get-in [:params :encounter-id])]})}},


 HowStressedDoYouFeelFinalize
 {:zen/tags #{aidbox.sdc/Finalize zen/schema},
  :document HowStressedDoYouFeelDocument,
  :export-engine aidbox.sdc/LispExport,
  :create [{:template aidbox.sdc/gen-observation-template
            :params {:path [:how-stressed]}}]},


 HowStressedDoYouFeelForm
 {:zen/tags #{aidbox.sdc/Form},
  :title "How stressed to you feel",
  :document HowStressedDoYouFeelDocument,
  :launch HowStressedDoYouFeelLaunch,
  :finalize HowStressedDoYouFeelFinalize}}
