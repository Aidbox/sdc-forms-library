{ns aidbox.forms.pain-assessment
 import #{zenbox aidbox.sdc aidbox.sdc.fhir}

 ;;
 ;; Pain Assessment
 ;;
 PainAssessmentDocument
 {:zen/tags #{zen/schema aidbox.sdc/doc aidbox.sdc/rules}
  :zen/desc "Pain Assessment"
  :type zen/map
  :confirms #{aidbox.sdc/Document}
  :keys {:pain-assessment-enabled {:text "**Does the patient have pain?**" :type zen/boolean}
         :pain-location {:text "Where is the pain located?" :type zen/string}
         :pain-scale {:text "Current Pain Scale 0 to 10"
                      :type zen/map
                      :keys {:value {:type zen/number :min 0 :max 10}}
                      :code [{:code "38208-5" :system "https://loinc.org" :display "Pain severity"}] }
         :pain-interference {:text "In last month how often does pain interfere with life?"
                             :confirms #{aidbox.sdc.fhir/coding}
                             :enum [{:value {:display "None of the time"
                                             :code "LA6297-1"
                                             :system "https://loinc.org"}}
                                    {:value {:display "A little bit of the time"
                                             :code "LA14732-4"
                                             :system "https://loinc.org"}}
                                    {:value {:display "Some of the time"
                                             :code "LA14733-2"
                                             :system "https://loinc.org"}}
                                    {:value {:display "Most of the time"
                                             :code "LA14734-0"
                                             :system "https://loinc.org"}}
                                    {:value {:display "All of the time"
                                             :code "LA6154-4"
                                             :system "https://loinc.org"}}]}
         :pain-comment {:text "Comments" :type zen/string}}}

 PainAssessmentLayout
 {:zen/tags #{aidbox.sdc/Layout aidbox.sdc/rules}
  :document PainAssessmentDocument
  :engine aidbox.sdc/Hiccup
  :sdc/rules {:enable-pain-assessment (get-in [:pain-assessment-enabled])}
  :layout
  {:type aidbox.sdc/col
   :children
   [{:bind [:pain-assessment-enabled]}
    {:type aidbox.sdc/fields
     :children
     [{:type aidbox.sdc/fields
       :sdc/display-when (get-in [:enable-pain-assessment])
       :children
       [{:bind [:pain-scale]}
        {:bind [:pain-location]}
        {:bind [:pain-interference]}
        {:bind [:pain-comment]}]}]}]}}

 PainAssessmentLaunch
 {:zen/tags #{aidbox.sdc/Launch}
  :document PainAssessmentDocument
  :params {:encounter-id {:type zen/string}}
  :populate-engine aidbox.sdc/LispPopulate
  :populate {:author    (get-in [:ctx :user])
             :encounter {:id (get-in [:params :encounter-id]) :resourceType "Encounter"}
             :patient   (sql {:select [:#> :resource [:subject]]
                              :from :Encounter
                              :where [:= :id (get-in [:params :encounter-id])]})}}

 PainAssessmentFinalize
 {:zen/tags #{aidbox.sdc/Finalize zen/schema}
  :document PainAssessmentDocument
  :export-engine aidbox.sdc/LispExport
  :create [(when (get :pain-scale)
             {:resourceType "Observation"
              :effective {:dateTime (date)}
              :issued (date)
              :status "final"
              :code {:coding [{:code "38208-5" :system "https://loinc.org" :display "Pain severity"}]}
              :subject   (get :patient)
              :encounter (get :encounter)
              :value {:integer (get-in [:pain-scale :value])}
              :note (when (get :pain-comment)
                      [{:text (get :pain-comment)}])})]}

 PainAssessmentForm
 {:zen/tags #{aidbox.sdc/Form}
  :title    "Pain Assessment"
  :document PainAssessmentDocument
  :layout   PainAssessmentLayout
  :launch   PainAssessmentLaunch
  :finalize PainAssessmentFinalize}}
