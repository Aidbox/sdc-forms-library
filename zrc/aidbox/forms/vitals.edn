{ns aidbox.forms.vitals
 import #{zenbox aidbox.sdc aidbox.sdc.fhir}

 VitalsDocument
 {:zen/tags #{zen/schema aidbox.sdc/doc aidbox.sdc/rules},
  :source {:url "https://loinc.org/85353-1/"
           :system  "https://loinc.org/"
           :code "85353-1"}
  :zen/desc "This form allows you measure the body's basic functions.
These include temperature, heart rate, respiratory rate, blood pressure, and oxygen saturation.
As additional option this form has BMI."
  :type zen/map,
  :confirms #{aidbox.sdc/Document},
  :sdc/rules {:bmi
              (when (and (get-in [:body-weight :value])
                         (get-in [:body-height :value]))
                (* (divide (* (get-in [:body-weight :value])
                              703)
                           (* (get-in [:body-height :value])
                              (get-in [:body-height :value])))
                   1))},
  :keys {:temperature {:type zen/vector,
                       :minItems 1,
                       :every {:type zen/map,
                               :keys {:value {:text "Body temperature",
                                              :confirms #{aidbox.sdc.fhir/quantity}
                                              :units [{:name "Â°F"}],
                                              :sdc/boundaries {:imperial {:min 86 :max 105}}
                                              :code [{:system "http://loinc.org" :code "8310-5"}]
                                              :linkId "8310-5"},
                                      :datetime {:type zen/datetime :text "Moment of measurement"}}}},
         :blood-pressure {:type zen/vector,
                          :minItems 1,
                          :every {:type zen/map,
                                  :keys {:systolic {:confirms #{aidbox.sdc.fhir/quantity}
                                                    :units [{:name "mmHg"}],
                                                    :text "BP sys",
                                                    :type zen/map
                                                    :keys {:value {:type zen/number :min 40 :max 300}}
                                                    :code [{:system "http://loinc.org" :code "8480-6"}]
                                                    :linkId "8480-6"},
                                         :diastolic {:text "BP dias",
                                                     :units [{:name "mmHg"}],
                                                     :confirms #{aidbox.sdc.fhir/quantity}
                                                     :type zen/map
                                                     :keys {:value {:type zen/number :min 20 :max 220}}
                                                     :code [{:system "http://loinc.org" :code "8462-4"}]
                                                     :linkId "8462-4"},
                                         :arm {:text "Arm"
                                               :confirms #{aidbox.sdc.fhir/coding}
                                               :enum [{:value {:display "Biceps left",
                                                               :code "LA11158-5",
                                                               :system "http://loinc.org"}}
                                                      {:value {:display "Biceps right",
                                                               :code "LA11159-3",
                                                               :system "http://loinc.org"}}],
                                               :code [{:system "http://loinc.org" :code "41904-4"}]
                                               :linkId "41904-4"}
                                         :positions {:text "Positions"
                                                     :confirms #{aidbox.sdc.fhir/coding}
                                                     :enum [{:value {:display "Sitting", :code "LA11868-9", :system "http://loinc.org"}}
                                                            {:value {:display "Lying", :code "LA11869-7", :system "http://loinc.org"}}
                                                            {:value {:display "Standing", :code "LA11870-5", :system "http://loinc.org"}}],
                                                     :code [{:system "http://loinc.org" :code "8361-8"}]
                                                     :linkId "8361-8"},
                                         :datetime {:type zen/datetime
                                                    :text "Moment of measurement"}}}}
         :pulse-image {:text "Pulse image"
                       :confirms #{aidbox.sdc.fhir/attachment}
                       :type zen/map
                       :keys {:contentType {:type zen/string
                                            :regex "image/*"}}
                       :sdc-type aidbox.sdc/attachment},
         :respiratory-rate {:type zen/vector,
                            :minItems 1,
                            :every {:type zen/map,
                                    :keys {:value {:text "Resp rate",
                                                   :units [{:name "bpm"}],
                                                   :confirms #{aidbox.sdc.fhir/quantity}
                                                   :type zen/map
                                                   :keys {:value {:type zen/number :min 6 :max 60}}
                                                   :code [{:system "http://loinc.org" :code "9279-1"}]
                                                   :linkId "9279-1"},
                                           :datetime {:type zen/datetime
                                                      :text "Moment of measurement"}}}}
         :bmi {:text "BMI",
               :type zen/number
               :scale 1
               :code [{:system "http://loinc.org" :code "39156-5"}]
               :linkId "39156-5"},


         :body-weight {:text "Weight",
                       :confirms #{aidbox.sdc.fhir/quantity}
                       :units [{:name "[lb_av]"} {:name "kg"}],
                       :code [{:system "http://loinc.org" :code "29463-7"}]
                       :linkId "29463-7"},

         :saturation {:type zen/vector,
                      :minItems 1,
                      :every {:type zen/map,
                              :keys {:value {:text "SaO2 % BldA PulseOx",
                                             :type zen/map
                                             :confirms #{aidbox.sdc.fhir/quantity}
                                             :keys {:value {:type zen/number :min 60 :max 100}}
                                             :units [{:name "%"}]
                                             :code [{:system "http://loinc.org" :code "59408-5"}]
                                             :linkId "59408-5"},
                                     :datetime {:text "Moment of measurement"
                                                :type zen/datetime}}}}
         :body-height {:text "Body height",
                       :units [{:name "[in_i]"} {:name "cm"}],
                       :confirms #{aidbox.sdc.fhir/quantity}
                       :code [{:system "http://loinc.org" :code "8302-2"}]
                       :linkId "8302-2"},
         :heart-rate {:type zen/vector,
                      :minItems 1,
                      :every {:type zen/map,
                              :keys {:value {:text "Heart rate",
                                             :type zen/map
                                             :confirms #{aidbox.sdc.fhir/quantity}
                                             :keys {:value {:type zen/number :min 30 :max 250}}
                                             :units [{:name "bpm"}],
                                             :last-change-datetime [:datetime]
                                             :code [{:system "http://loinc.org" :code "8302-2"}]
                                             :linkId "8867-4"}
                                     :datetime {:type zen/datetime
                                                :text "Moment of measurement"}}}}}}

                                        ; type, label etc...

 body-temperature-subform
 {:zen/tags #{aidbox.sdc/Layout}
  :engine aidbox.sdc/Hiccup
  :layout
  {:type aidbox.sdc/col
   :children [{:type aidbox.sdc/fields
               :children
               [{:bind [:value] :last-change-datetime [:datetime] :label ""}
                {:bind [:datetime] :label "" :is-last-change true}]}]}}

 VitalsLayout
 {:zen/tags #{aidbox.sdc/Layout},
  :document VitalsDocument,
  :engine aidbox.sdc/Hiccup
  :layout {:type aidbox.sdc/col,
           :children [{:type aidbox.sdc/row,
                       :children [{:type aidbox.sdc/subform,
                                   :bind [:temperature],
                                   :label "Temperature"
                                   :collection true,
                                   :form-ref body-temperature-subform}]}
                      {:type aidbox.sdc/media-viewer
                       :src "https://raw.githubusercontent.com/Aidbox/sdc-forms-library/main/resources/images/bp-instructions.png"
                       :width 500
                       :height 300}
                      {:type aidbox.sdc/row,
                       :children [{:type aidbox.sdc/subform,
                                   :label "Blood Pressure"
                                   :bind [:blood-pressure],
                                   :collection true,
                                   :form-layout {:type aidbox.sdc/col
                                                 :children [{:type aidbox.sdc/fields,
                                                             :children [{:type aidbox.sdc/row,
                                                                         :children [{:bind [:systolic],
                                                                                     :last-change-datetime [:datetime]}
                                                                                    {:bind [:diastolic],
                                                                                     :last-change-datetime [:datetime]}]}
                                                                        {:type aidbox.sdc/row,
                                                                         :children [{:bind [:positions]}
                                                                                    {:bind [:arm]}]}
                                                                        {:bind [:datetime],
                                                                         :label "",
                                                                         :is-last-change true}]}]}}]}
                      {:type aidbox.sdc/row,
                       :children [{:type aidbox.sdc/subform,
                                   :bind [:heart-rate],
                                   :label "Pulse Rate"
                                   :collection true,
                                   :form-layout {:type aidbox.sdc/col
                                                 :children [{:type aidbox.sdc/fields,
                                                             :children [{:bind [:value]
                                                                         :last-change-datetime [:datetime]}
                                                                        {:bind [:datetime]
                                                                         :is-last-change true}]}]}}]}
                      {:type aidbox.sdc/row,
                       :children [{:type aidbox.sdc/subform,
                                   :bind [:respiratory-rate],
                                   :collection true,
                                   :label "Respiratory Rate"
                                   :form-layout {:type aidbox.sdc/col
                                                 :children [{:type aidbox.sdc/fields,
                                                             :children [{:bind [:value]
                                                                         :last-change-datetime [:datetime]}
                                                                        {:bind [:datetime]
                                                                         :is-last-change true}]}]}}]}
                      {:type aidbox.sdc/row,
                       :children [{:type aidbox.sdc/subform,
                                   :bind [:saturation],
                                   :label "Oxygen Saturation",
                                   :collection true,
                                   :form-layout {:type aidbox.sdc/col
                                                 :children [{:type aidbox.sdc/fields,
                                                             :children [{:bind [:value]
                                                                         :last-change-datetime [:datetime]}
                                                                        {:bind [:datetime]
                                                                         :is-last-change true}]}]}}]}
                      {:type aidbox.sdc/row,
                       :children [{:bind [:body-weight]}]}
                      {:type aidbox.sdc/row
                       :children [{:bind [:body-height]}]}
                      {:type aidbox.sdc/row,
                       :children [{:bind [:bmi], :label "Body Mass Index"}]}]}}


 VitalsLaunch
 {:zen/tags #{aidbox.sdc/Launch}
  :document VitalsDocument
  :params {:encounter-id {:type zen/string}}
  :populate-engine aidbox.sdc/LispPopulate
  :populate {:author    (get-in [:ctx :user])
             :encounter {:id (get-in [:params :encounter-id])
                         :resourceType "Encounter"}
             :patient   (sql {:select [:#> :resource [:subject]]
                              :from :Encounter
                              :where [:= :id (get-in [:params :encounter-id])]})
             :body-height (or (sql {:select [:#> :resource [:value :Quantity]]
                                    :from :Observation
                                    :where [:and
                                            [:= [:#>> :resource [:code :coding 0 :code]] "8302-2"]
                                            [:= [:#>> :resource [:subject :id]]
                                             (sql {:select [:#>> :resource [:subject :id]]
                                                   :from :Encounter
                                                   :where [:= :id (get-in [:params :encounter-id])]})]]
                                    :order-by [:pg/desc :cts]
                                    :limit 1})
                              {})}}

 VitalsFinalizeConstraints
 {:zen/tags #{zen/schema}
  :type zen/map
  :require #{:temperature
             :blood-pressure
             :respiratory-rate
             :bmi
             :body-weight
             :saturation
             :body-height
             :heart-rate}
  :keys
  {:temperature {:type zen/vector,
                 :minItems 1,
                 :every {:type zen/map,
                         :require #{:value :datetime}
                         :keys {:value {:require #{:value}
                                        :type zen/map
                                        :keys {:value {:type zen/number}}},
                                :datetime {:type zen/datetime}}}},
   :blood-pressure {:type zen/vector,
                    :minItems 1,
                    :every {:type zen/map,
                            :require #{:systolic :diastolic :datetime}
                            :keys {:systolic {:type zen/map
                                              :require #{:value}
                                              :keys {:value {:type zen/number}}},
                                   :diastolic {:type zen/map
                                               :require #{:value}
                                               :keys {:value {:type zen/number}}},
                                   :datetime {:type zen/datetime}}}},
   :respiratory-rate {:type zen/vector,
                      :minItems 1,
                      :every {:type zen/map,
                              :require #{:value :datetime}
                              :keys {:value {:type zen/map
                                             :require #{:value}
                                             :keys {:value {:type zen/number}}},
                                     :datetime {:type zen/datetime}}}}
   :bmi {:type zen/number},
   :body-weight {:type zen/map
                 :require #{:value}
                 :keys {:value {:type zen/number}}},
   :saturation {:type zen/vector,
                :minItems 1,
                :every {:type zen/map,
                        :require #{:value :datetime}
                        :keys {:value {:require #{:value}
                                       :type zen/map
                                       :keys {:value {:type zen/number}}}
                               :datetime {:type zen/datetime}}}}
   :body-height {:require #{:value}
                 :keys {:value {:type zen/number}}
                 :type zen/map},
   :heart-rate {:type zen/vector,
                :minItems 1,
                :every {:type zen/map,
                        :require #{:value :datetime}
                        :keys {:value {:type zen/map
                                       :require #{:value}
                                       :keys {:value {:type zen/number}}}
                               :datetime {:type zen/datetime}}}}}}

 VitalsFinalize
 {:zen/tags #{aidbox.sdc/Finalize zen/schema}
  :document VitalsDocument
  :profile VitalsFinalizeConstraints
  :export-engine aidbox.sdc/LispExport
  :create [(for [i (get :temperature)]
             (when (get i :value)
               {:resourceType "Observation"
                :status "final"
                :subject   (get :patient)
                :encounter (get :encounter)
                :effective {:dateTime (get i :datetime)}
                :code {:coding [{:code "8310-5"}]}
                :value {:Quantity (get i :value)}}))
           (for [i (get :blood-pressure)]
             (when (and (get i :systolic) (get i :diastolic))
               {:resourceType "Observation"
                :status "final"
                :subject   (get :patient)
                :encounter (get :encounter)
                :effective {:dateTime (get i :datetime)}
                :code {:coding [{:code "85354-9"}]}
                :bodySite {:coding
                           (remove
                            nil?
                            [(when (get-in i [:arm :code])
                               {:display (get-in i [:arm :display])
                                :code (get-in i [:arm :code])
                                :system (get-in i [:arm :system])})
                             (when (get-in i [:positions :code])
                               {:display (get-in i [:positions :display])
                                :code (get-in i [:positions :code])
                                :system (get-in i [:positions :system])})])}
                :component [{:code {:coding [{:code "8480-6"}]}
                             :value {:Quantity (get i :systolic)}}
                            {:code {:coding [{:code "8462-4"}]}
                             :value {:Quantity (get i :diastolic)}}]}))
           {:template aidbox.sdc/gen-observation-template
            :params {:path [:body-weight]}}
           {:template aidbox.sdc/gen-observation-template
            :params {:path [:body-height]}}
           (when (get :bmi)
             {:encounter (get :encounter),
              :value {:Quantity {:unit "kg/m2" :value (get :bmi)}},
              :resourceType "Observation",
              :status "final",
              :effective {:dateTime (get :datetime)},
              :code {:coding [{:system "http://loinc.org" :display "BMI" :code "39156-5"}]},
              :subject (get :patient)})
           (for [i (get :heart-rate)]
             (when (get i :value)
               {:encounter (get :encounter),
                :value {:Quantity (get i :value)},
                :resourceType "Observation",
                :status "final",
                :effective {:dateTime (get i :datetime)},
                :code {:coding [{:code "8867-4"}]},
                :subject (get :patient)}))
           (for [i (get :respiratory-rate)]
             (when (get i :value)
               {:encounter (get :encounter),
                :value {:Quantity (get i :value)},
                :resourceType "Observation",
                :status "final",
                :effective {:dateTime (get i :datetime)},
                :code {:coding [{:code "9279-1"}]},
                :subject (get :patient)}))
           (for [i (get :saturation)]
             (when (get i :value)
               {:encounter (get :encounter),
                :value {:Quantity (get i :value)},
                :resourceType "Observation",
                :status "final",
                :effective {:dateTime (get i :datetime)},
                :code {:coding [{:code "59408-5"}]},
                :subject (get :patient)}))]}

 VitalsForm
 {:zen/tags #{aidbox.sdc/Form}
  :title    "Vitals Signs"
  :document VitalsDocument
  :layout   VitalsLayout
  :launch   VitalsLaunch
  :finalize VitalsFinalize}

 ;; ...
 }
